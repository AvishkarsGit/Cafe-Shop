<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h1>Login</h1>

    <% if (error) { %>
    <p style="color: red"><%= error %></p>
    <% } %>
    <form action="/auth/login" method="post" id="login-form">
      <input
        type="email"
        placeholder="enter email"
        name="email"
        required
        id="email"
      />
      <% if (error && error.email) { %>
      <p style="color: red"><%= error.email %></p>
      <% } %>
      <br /><br />
      <input
        type="password"
        placeholder="enter password"
        name="password"
        required
        id="password"
      />
      <% if (error && error.password) { %>
      <p style="color: red"><%= error.password %></p>
      <% } %>

      <br /><br />
      <button>Login</button>

      <br />
      <br />
      <a href="/auth/forgot-password" id="forgot-btn"
        >Forgot Password</a
      >
    </form>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const loginForm = document.getElementById("login-form");
        if (!loginForm) {
          console.log("Form not found");
          return;
        }

        loginForm.addEventListener("submit", async (e) => {
          e.preventDefault();

          const formData = new FormData(loginForm); // Correct way to create FormData

          const userData = {
            email: formData.get("email"),
            password: formData.get("password"),
          };

          alert("Please wait...");

          try {
            const response = await axios.post("/auth/login", userData, {
              withCredentials: true,
              headers: { "Content-Type": "application/json" },
            });

            if (response.data.success) {
              alert(response.data.message);
              location.replace("/"); // Redirect after login
            } else {
              alert(response.data.message);
            }
          } catch (error) {
            if (error.response && error.response.data.message) {
              const errors = error.response.data.message;
              let errorMessage = "";
              Object.keys(errors).forEach((key) => {
                errorMessage += `${errors[key]}`;
              });

              alert(errorMessage);
            } else {
              alert("Login failed");
            }
          }
        });
      });
    </script>
  </body>
</html>
